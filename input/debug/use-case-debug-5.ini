[Repository]
Name=ECS Racing
URL=https://github.com/Unity-Technologies/ECS-Network-Racing-Sample.git

[Input]
public int Compare(SortableProgress x, SortableProgress y)
{
    if(x.Progress.HasArrived && y.Progress.HasArrived)
        return x.Progress.ArrivalTime.CompareTo(y.Progress.ArrivalTime);

    if (x.Progress.HasArrived || y.Progress.HasArrived)
        return y.Progress.HasArrived.CompareTo(x.Progress.HasArrived);

    if (x.Progress.CurrentLap != y.Progress.CurrentLap)
        return y.Progress.CurrentLap.CompareTo(x.Progress.CurrentLap);

    if (x.Progress.CurrentCheckPoint == y.Progress.CurrentCheckPoint)
    {
        return x.Distance.CompareTo(y.Distance);
    }

    return y.Progress.CurrentCheckPoint.CompareTo(x.Progress.CurrentCheckPoint);
}

Here's description how this functionality of comparing progress of two cards meant to work: 
- it should return -1 if x has higher progress than y
- it should return 1 if y has higher progress than x
- if identical it returns 0

Highest progress is when:
- car has arrived earlier then the other
- or current lap is higher than the other
- or current check point is higher than the other
- or current distance is higher than the other

Is there's any logical issues?


[Evaluator]
Should point to 2 existing issues in the logic.